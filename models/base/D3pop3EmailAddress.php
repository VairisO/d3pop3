<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3pop3\models\base;

use Yii;

/**
 * This is the base-model class for table "d3pop3_email_address".
 *
 * @property string $id
 * @property string $email_id
 * @property string $address_type
 * @property string $email_address
 * @property string $name
 *
 * @property \d3yii2\d3pop3\models\D3pop3Email $email
 * @property string $aliasModel
 */
abstract class D3pop3EmailAddress extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const ADDRESS_TYPE_TO = 'To';
    const ADDRESS_TYPE_CC = 'CC';
    const ADDRESS_TYPE_BCC = 'BCC';
    //@FIXME - Enum Replay nomainīt uz korektāku: Reply
    const ADDRESS_TYPE_REPLY = 'Replay';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'd3pop3_email_address';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['email_id'], 'required'],
            [['id', 'email_id'], 'integer'],
            [['address_type'], 'string'],
            [['email_address', 'name'], 'string', 'max' => 255],
            [['email_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3pop3\models\D3pop3Email::className(), 'targetAttribute' => ['email_id' => 'id']],
            ['address_type', 'in', 'range' => [
                    self::ADDRESS_TYPE_TO,
                    self::ADDRESS_TYPE_CC,
                    self::ADDRESS_TYPE_BCC,
                    self::ADDRESS_TYPE_REPLY,
                ]
            ],
            [['email_address'], 'email'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3pop3', 'ID'),
            'email_id' => Yii::t('d3pop3', 'Email ID'),
            'address_type' => Yii::t('d3pop3', 'Address type'),
            'email_address' => Yii::t('d3pop3', 'Email'),
            'name' => Yii::t('d3pop3', 'Name'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'address_type' => Yii::t('d3pop3', 'Address type'),
            'email_address' => Yii::t('d3pop3', 'Email'),
            'name' => Yii::t('d3pop3', 'Name'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getEmail()
    {
        return $this->hasOne(\d3yii2\d3pop3\models\D3pop3Email::className(), ['id' => 'email_id']);
    }




    /**
     * get column address_type enum value label
     * @param string $value
     * @return string
     */
    public static function getAddressTypeValueLabel($value){
        $labels = self::optsAddressType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column address_type ENUM value labels
     * @return array
     */
    public static function optsAddressType()
    {
        return [
            self::ADDRESS_TYPE_TO => Yii::t('d3pop3', self::ADDRESS_TYPE_TO),
            self::ADDRESS_TYPE_CC => Yii::t('d3pop3', self::ADDRESS_TYPE_CC),
            self::ADDRESS_TYPE_BCC => Yii::t('d3pop3', self::ADDRESS_TYPE_BCC),
            self::ADDRESS_TYPE_REPLY => Yii::t('d3pop3', self::ADDRESS_TYPE_REPLY),
        ];
    }

}

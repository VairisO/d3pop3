<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3pop3\models\base;

use Yii;

/**
 * This is the base-model class for table "d3pop3_regex_masks".
 *
 * @property integer $id
 * @property integer $sys_company_id
 * @property string $type
 * @property string $name
 * @property string $regexp
 * @property string $notes
 *
 * @property \d3yii2\d3pop3\models\D3cCompany $sysCompany
 * @property string $aliasModel
 */
abstract class D3pop3RegexMasks extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    public const TYPE_AUTO = 'auto';
    public const TYPE_MANUAL = 'manual';
    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3pop3_regex_masks';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            // 'attributeTypes' will be composed automatically according to `rules()`
        ];
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'enum-type' => ['type', 'in', 'range' => [
                    self::TYPE_AUTO,
                    self::TYPE_MANUAL,
                ]
            ],
            'smallint Unsigned' => [['sys_company_id'],'integer' ,'min' => 0 ,'max' => 65535],
            'integer Signed' => [['id'],'integer' ,'min' => -2147483648 ,'max' => 2147483647],
            [['type', 'name', 'regexp'], 'required'],
            [['type', 'notes'], 'string'],
            [['name', 'regexp'], 'string', 'max' => 255],
            [['sys_company_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3pop3\models\D3cCompany::className(), 'targetAttribute' => ['sys_company_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3labels', 'ID'),
            'sys_company_id' => Yii::t('d3labels', 'Sys Company ID'),
            'type' => Yii::t('d3labels', 'Type'),
            'name' => Yii::t('d3labels', 'Name'),
            'regexp' => Yii::t('d3labels', 'Regexp'),
            'notes' => Yii::t('d3labels', 'Notes'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSysCompany()
    {
        return $this->hasOne(\d3yii2\d3pop3\models\D3cCompany::className(), ['id' => 'sys_company_id'])->inverseOf('d3pop3RegexMasks');
    }




    /**
     * get column type enum value label
     * @param string $value
     * @return string
     */
    public static function getTypeValueLabel($value): string
    {
        if(!$value){
            return '';
        }
        $labels = self::optsType();
        return $labels[$value] ?? $value;
    }

    /**
     * column type ENUM value labels
     * @return array
     */
    public static function optsType(): array
    {
        return [
            self::TYPE_AUTO => Yii::t('d3labels', 'auto'),
            self::TYPE_MANUAL => Yii::t('d3labels', 'manual'),
        ];
    }
    /**
    * ENUM field values
    */
    /**
     * @return bool
     */
    public function isTypeAuto(): bool
    {
        return $this->type === self::TYPE_AUTO;
    }
    /**
     * @return bool
     */
    public function isTypeManual(): bool
    {
        return $this->type === self::TYPE_MANUAL;
    }

}
